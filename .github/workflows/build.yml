# .github/workflows/build.yml
name: Build & Release Executables

on:
  push:
    tags:
      - 'v*'   # Trigger this workflow on version tags, e.g. v1.0.0

permissions:
  contents: write   # Needed for creating/updating releases

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build with PyInstaller
        run: |
          pyinstaller --onefile main.py
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            mv dist/main dist/main-linux
          else
            mv dist/main dist/main-macos
            chmod +x dist/main-macos
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ matrix.os == 'ubuntu-latest' && 'linux' || 'macos' }}
          path: dist/*

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-bin

      - name: Create or update GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          overwrite_files: true      # <- overwrite existing release assets if they exist

      - name: Upload executables to release
        uses: softprops/action-gh-release@v2
        if: steps.create_release.outputs.upload_url != ''
        with:
          files: |
            release-bin/main-linux
            release-bin/main-macos
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
